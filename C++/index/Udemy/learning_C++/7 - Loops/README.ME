						7 - LOOPS

		LOOPS/REPEATING STATEMENTS/ITERATIVE STATEMENTS
		________________________________________________

		1. while(): pre-tested loop
		2. do while(): post-tested loop
		3. for: counter controled loop
		4. for each: for each loop for collections


		"You will continue to add sugar to your coffee untill it is sweet.  "


						WHILE / DO WHILE

		:: LOOP SKELETONS :: 

		while (<condition>)
		{
			PROCESS; 
		}

		do
		{

			PRCESS: 

		} while (<conditon>);


		- WHILE and DO are basically the same TYPES of LOOPS 
		- ONLY DIFFERENCE: 
			* WHILE: if CONDITION is FALSE then PROCCESS will not be performed
			
			* DO: will run the PROCESS first then the CONDITION 
				- It will execute a minimum of one time


# The bottom example uses a WHILE loop to verify if a number is less than i which = 155. If the number the user inputs (n) a number that is less than i, then the while loop will increment "n" by 1 untill it = 155. Once reached the LOOP will end.

_______________________________________

#include<iostream>
#include<cmath>3
#include<string>
using namespace std;

int main(){

int n;
int i = 155;

	cout << "Enter a Numer For N:\n";
	cin >> n; 

	while (n <= i){
		n = n + 1;
		cout << n << endl;
	}



return 0;
}


# WHILE loops within FOR loops
_______________________________________

#include<iostream>
#include<string>
#include<cmath>
using namespace std;

int main(){

int x,z;

cout << "Please Enter in a Number for X:\n";
cin >> x;
cout << "Please Enter in a Number for X:\n";
cin >> z;

if (x > z){
	while(z <= x){
		cout << "\n" << z << " <-- Z" << endl;
		cout << "\n" << x << " <-- X" << endl;
		z++;
	} 
cout << "___________________________________________________\n" << endl;	
cout << "Z Was Trailing Behind X But has finally Caught Up.\n" << endl;
}

else if (x < z) {
	while(x <= z){
		x = x + 1;
		cout << "\n" << x << " <-- X" << endl;
		cout << "\n" << z << " <-- Z" << endl;
		x++;
	} 
cout << "___________________________________________________\n" << endl;
cout << "X Was Trailing Behind Z But has finally Caught Up.\n" << endl;
} 

return 0;
}


					DO WHILE LOOP



// Need to work on this one a bit more 
// will really only work if x is lest than 34


#include<iostream>
#include<cmath>
#include<string>
using namespace std;

int main() {

int x;
int z;

cout << "Enter a Number For x: " << endl; 
cin >> x;

do{ 
	x++; 
	//cout << x << endl;
} while (x <= 400);(z = x * 12);

if (z < 10000){
	cout << "\nGuest # "<< z << ". Welcome to Z\n";
}
else if (z > 10000) {
	cout << "\nGuest # " << z << " Sorry, we have reached full capacity. Please come back again next week.";
}  

return 0;	
}

//while (x <= 100);(z = z * 12);



			WHILE LOOPS within WHILE LOOPS




#include <iostream>
#include <string>
#include <cmath>
using namespace std;

int main() {

bool coin = false;

while (coin == false) 
{
//bool coin = false;
while (coin == false)
{
int lock_one = 5;
while (lock_one <= 50)
{
	lock_one++;
	cout << lock_one << endl; 
	}
	cout << endl << "Lock One Unlocked\n" << endl;
	coin = true;
	} 

} 						
bool coinTwo = false;

while (coinTwo == false)
{
	
int lock_two = 3;
while (lock_two <= 41) 
{
	lock_two++;
	cout << lock_two << endl; 
}
	cout << endl;
	cout << "\nLock two Unlocked";
	coinTwo = true;
} 

coin = true;
cout << "\n_________________________________\n";
cout << endl << "\nChest Unlocked!\n" << endl;

return 0;
}





				 		FOR LOOPS 

- Loops /respecting statements/ Interative Statements

* The for loop will consist of 3 parts

		
		- The numbered steps below will be repeated


		 1:      2:5:8:11:fail: 4:7:10:
		 |			   |		   |
for (initialization,condition,updation)
{
	process -> 3:6:9:12: 
}


- For: if you know the number times you want to loop
 
	- It is refered to as (counter control loop)
		- whenver counting is involved for repetation then we use (for) loop



int main() {

int n,i;	

	cout << "Enter n";
	cin n;

		- The for() loop is doing the following:
			- assigning the value of 1 
			- if 1 is less than or = to n
			- increment i by 1 in each interation 
			- print out i new value within each itteration

	for (i =1; 1 <= n; i++)
	{
		cout << i << end ;
	}
}	



- For() loop is the most used loop in C++






		
		________________________________________________

		Creating a Multiplication Table With While Loops
		_________________________________________________



		#include <iostream>
#include <string>
#include <cmath>
using namespace std;

int main() {
int i = 1;
int n; 

cout << "Please enter in a number for N" << endl;
cin >> n;

while(i <= 10){
    int sum = n * i;
    cout << endl << i << " x " << n << " = " << sum << endl; 
    i++;
}

return 0;
}



// OUTPUT: 

21

1 x 21 = 21

2 x 21 = 42

3 x 21 = 63

4 x 21 = 84

5 x 21 = 105

6 x 21 = 126

7 x 21 = 147

8 x 21 = 168

9 x 21 = 189

10 x 21 = 210







		________________________________________________

		Creating a Multiplication Table With While Loops
		_________________________________________________


- In this one we want to add up the sum of each sum that appeared within this loop

			-------------------------------------------
			FLOW CHAR of HOW WE WANT TO ADD UP THE SUM
			--------------------------------------------

			i = 1 

			i <= 9

			0 + 1 = 1
			1 + 2 = 3 
			3 + 3 = 6 
			6 + 4 = 10 
			10 + 5 = 15 
			15 + 6 = 21 
			21 + 7 = 28 
			28 + 8 = 36
			36 + 9 = 45


		And Your sum is: 45


#include <iostream>
#include <string>
#include <cmath>
using namespace std;

int main() {
int i = 1;
int n; 

cout << "Please enter in a number for N" << endl;
cin >> n;

while(i <= 10){
    int sum = n * i;
    cout << endl << i << " x " << n << " = " << sum << endl; 
    i++;
}

return 0;
}





				________________________________________________

							Finding The Factorial 
				_________________________________________________


				n = 6

				1 | 1 * 1  = 1
				2 | 1 * 2  = 1
				3 | 2 * 3  = 6
				4 | 6 * 4  = 24
				5 | 24 * 5  = 120
				6 | 120 * 6  = 720





#include <iostream>
#include <string>
#include <cmath>	
using namespace std;

int main(){ 

int n,i, sum,fact;

i = 1;
fact = 1;

cout << "Enter a Number For N" << endl;
cin >> n; 


while (i <= n){
	fact = i * fact;
	i++;
}

cout << n << "!= " << fact << endl;

return 0;
}





						
						____________________________

						Fiding The Factor of A Number
						_____________________________


* while() loop



#include<iostream>
#include<string>
#include<cmath>
using namespace std;

int main(){

int i,n,fact;

i = 1;
	
	cout << "Enter a number for N:" << endl;
	cin >> n;


	while(i <= n){
		if (n % i == 0)
		{
			cout << i << endl;
			i++;
		}
		else
		{
			i++; 
		} 
	}
		cout << "Thes Above Integers Are Your FactorsÃ¥" << endl;
	



return 0;	
} 



* for() loop